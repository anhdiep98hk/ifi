package com.ifi.model;
// Generated Feb 24, 2018 2:22:47 AM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * Activities generated by hbm2java
 */
@Entity
@Table(name = "activities", catalog = "assigment")
public class Activities implements java.io.Serializable {

	private Integer activityId;
	private ActivityCodes activityCodes;
	private Projects projects;
	private Date endDate;
	private String otherDetails;
	private Date startDate;
	private Set<Timesheets> timesheetses = new HashSet<Timesheets>(0);

	public Activities() {
	}
	
	

	public Activities(Integer activityId, ActivityCodes activityCodes, Projects projects, Date endDate,
			String otherDetails, Date startDate) {
		super();
		this.activityId = activityId;
		this.activityCodes = activityCodes;
		this.projects = projects;
		this.endDate = endDate;
		this.otherDetails = otherDetails;
		this.startDate = startDate;
	}



	public Activities(ActivityCodes activityCodes, Projects projects, Date endDate, String otherDetails, Date startDate) {
		this.activityCodes = activityCodes;
		this.projects = projects;
		this.endDate = endDate;
		this.otherDetails = otherDetails;
		this.startDate = startDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "activity_id", unique = true, nullable = false)
	public Integer getActivityId() {
		return this.activityId;
	}

	public void setActivityId(Integer activityId) {
		this.activityId = activityId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "activity_codes_activity_code")
	public ActivityCodes getActivityCodes() {
		return this.activityCodes;
	}

	public void setActivityCodes(ActivityCodes activityCodes) {
		this.activityCodes = activityCodes;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "project_id")
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", length = 19)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "other_details")
	public String getOtherDetails() {
		return this.otherDetails;
	}

	public void setOtherDetails(String otherDetails) {
		this.otherDetails = otherDetails;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", length = 19)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "activities")
	@JsonBackReference
	public Set<Timesheets> getTimesheetses() {
		return this.timesheetses;
	}

	public void setTimesheetses(Set<Timesheets> timesheetses) {
		this.timesheetses = timesheetses;
	}

}
