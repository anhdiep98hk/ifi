package com.ifi.model;
// Generated Feb 24, 2018 2:22:47 AM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name = "employees", catalog = "assigment")
public class Employees implements java.io.Serializable {

	private Integer employeeId;
	private Date endDate;
	private String otherDetails;
	private Date startDate;
	private Set<Timesheets> timesheetses = new HashSet<Timesheets>(0);
	private Set<Projects> projectses = new HashSet<Projects>(0);

	public Employees() {
	}

	public Employees(Date endDate, String otherDetails, Date startDate, Set<Timesheets> timesheetses,
			Set<Projects> projectses) {
		this.endDate = endDate;
		this.otherDetails = otherDetails;
		this.startDate = startDate;
		this.timesheetses = timesheetses;
		this.projectses = projectses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "employee_id", unique = true, nullable = false)
	public Integer getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(Integer employeeId) {
		this.employeeId = employeeId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", length = 19)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "other_details")
	public String getOtherDetails() {
		return this.otherDetails;
	}

	public void setOtherDetails(String otherDetails) {
		this.otherDetails = otherDetails;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", length = 19)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employees", targetEntity= Timesheets.class)
	@JsonIgnore
	public Set<Timesheets> getTimesheetses() {
		return this.timesheetses;
	}

	public void setTimesheetses(Set<Timesheets> timesheetses) {
		this.timesheetses = timesheetses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employees", targetEntity = Projects.class)
	@JsonBackReference
	public Set<Projects> getProjectses() {
		return this.projectses;
	}

	public void setProjectses(Set<Projects> projectses) {
		this.projectses = projectses;
	}

}
